--Pre-requisite Adding Jar before creating table

ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;

--Creatin new Database and using same for assignment
drop database Baj_Casestudy
create  database Baj_Casestudy
USE Baj_Casestudy

--Dropping tableif exists
DROP TABLE Baj_Casestudy.nyc_taxi_data

--Creating external table nyc_taxi_data to extract data.
CREATE EXTERNAL TABLE IF NOT EXISTS Baj_Casestudy.nyc_taxi_data(
vendorid int,
tpep_pickup_datetime timestamp,
tpep_dropoff_datetime timestamp,
passenger_count int,
trip_distance double,
ratecodeid int,
store_and_fwd_flag string,
pulocationid int,
dolocationid int,
payment_type int,
fare_amount double,
extra double,
mta_tax double,
tip_amount double,
tolls_amount double,
improvement_surcharge double,
total_amount double
  ) ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LOCATION '/common_folder/nyc_taxi_data/'
tblproperties ("skip.header.line.count"="1");

--Verifying Data in Newly created table nyc_taxi_data

SELECT * FROM Baj_Casestudy.nyc_taxi_data Limit 5;

--Number of records available in table
SELECT COUNT(*) FROM Baj_Casestudy.nyc_taxi_data;
--------------------------------------------------------------------
--Total 1174569 available in nyc_taxi_data table
--------------------------------------------------------------------


--------------------------------------------------------------------
--Basic Data Quality Checks
--------------------------------------------------------------------


--------------------------------------------------------------------

--Question 1
--How many records has each TPEP provider provided? 
--Write a query that summarises the number of records of each provider.
--------------------------------------------------------------------

--Query to summarises the number of records of each provider

SELECT vendorid,
Case 
when vendorid=1 then 'Creative Mobile Technologies, LLC' 
when vendorid=2 then 'VeriFone Inc.' else 'X' end as Vendor_Name,
COUNT(*) as CNT FROM nyc_taxi_data GROUP BY vendorid;

--------------------------------------------------------------------
--There are 527386 records for vendor id 1 (Creative Mobile Technologies, LLC) and 647183 for vendor id 2  VeriFone Inc.
--vendorid	vendor_name	                        cnt
--1	        Creative Mobile Technologies, LLC	527386
--2	        VeriFone Inc.	                    647183
--------------------------------------------------------------------



--------------------------------------------------------------------

--Quesion 2 
--The data provided is for months November and December only. 
--Check whether the data is consistent, and if not, identify the data quality issues. 
--Mention all data quality issues in comments.

---------------------------------------------------------------------

--Data quality check for tpep_pickup_datetime


select COUNT(*)  from nyc_taxi_data where date_format(tpep_pickup_datetime,'yyyyMM') not in ('201711','201712');
--There are 14 records which is not from months November and December 2017


select vendorid,date_format(tpep_pickup_datetime,'yyyyMM') YR_MNTH from nyc_taxi_data where date_format(tpep_pickup_datetime,'yyyyMM') 
not in ('201711','201712') GROUP BY vendorid,date_format(tpep_pickup_datetime,'yyyyMM');
-----------------------------------------------

--vendorid	yr_mnth
--2	        200301
--2	        200901
--2	        201801
--2	        200812
--2	        201710

------------------------------------------------

-- Records were from October 2017,2009,2008,2003 and 2018 and all of them was vendor id 2


select *  from nyc_taxi_data where tpep_pickup_datetime is Null ;
-- None of the records with null value for tpep_pickup_datetime



--Data quality check for tpep_dropoff_datetime
select vendorid,date_format(tpep_dropoff_datetime,'yyyyMM') YR_MNTH from nyc_taxi_data where date_format(tpep_dropoff_datetime,'yyyyMM') not in ('201711','201712') GROUP BY vendorid,date_format(tpep_dropoff_datetime,'yyyyMM');


------------------------------------------
--vendorid	yr_mnth
--2	        200301
--2	        200901
--2	        201801
--1	        201801
--1	        201904
--2	        200812
--2	        201710
---------------------------------------------
-- Records were from October 2017,2009,2008,2003,2018 and 2019 and most of them was from vendor id 2  we can ignore 2018 as their trip was started on 31 dec 2017


--Checking null value in tpep_dropoff_datetime
select *  from nyc_taxi_data where  tpep_dropoff_datetime is null;
-- None of the records with null value for tpep_dropoff_datetime


--Checking for those recors where tpep_pickup_datetime> tpep_dropoff_datetime
select vendorid,COUNT(*) AS CNT from nyc_taxi_data where tpep_pickup_datetime> tpep_dropoff_datetime GROUP BY vendorid;

-------------------------
--vendorid	cnt
--1	        73
-------------------------
--73 records tpep_pickup_datetime is greater than tpep_dropoff_datetime and all are from Vendor id 1


-- 1 of the trip was completed in 526 days 
select tpep_dropoff_datetime,tpep_pickup_datetime, datediff(tpep_dropoff_datetime,tpep_pickup_datetime) AS Total_trip_time from nyc_taxi_data order by Total_trip_time desc--1 record with 526 days trip

------------------------------------------------------------------------
--tpep_dropoff_datetime	tpep_pickup_datetime	total_trip_time(In Days)
--2019-04-24 19:21:00.0	2017-11-14 13:50:00.0	526
----------------------------------------------------------------------------


-------------------------------------------------------------------------------------
-- Question 3 
--You might have encountered unusual or erroneous rows in the dataset. 
--Can you conclude which vendor is doing a bad job in providing the records using different columns of the dataset? 
--Summarise your conclusions based on every column where these errors are present. For example,  There are unusual passenger count, i.e. 0 which is unusual.
--------------------------------------------------------------------------------------


-- Checking if any column having null value
SELECT * FROM nyc_taxi_data where 
vendorid is null or
tpep_pickup_datetime is null or
tpep_dropoff_datetime is null or
passenger_count is null or
trip_distance is null or
ratecodeid is null or
store_and_fwd_flag is null or
pulocationid is null or
dolocationid is null or
payment_type is null or
fare_amount is null or
extra is null or
mta_tax is null or
tip_amount is null or
tolls_amount is null or
improvement_surcharge is null or
total_amount is null;

--- None of the column having null value



--Checking for unusual or erroneous passenger count 
SELECT vendorid,passenger_count,COUNT(*) as CNT FROM nyc_taxi_data 
where date_format(tpep_pickup_datetime,'yyyyMM') in ('201711','201712') GROUP BY vendorid,passenger_count;

----------------------------------------

--vendorid	passenger_count	cnt
--2	        0	            11
--1	        0	            6813

--There are some trip wher passenger count is 0 for both Vendor.11 for vendor 2 and 6813 for vendor 1
----------------------------------------



--Checking for unusual or erroneous trip_distance 

 SELECT vendorid,COUNT(*) AS CNT FROM  nyc_taxi_data  where trip_distance<=0 GROUP by vendorid;
 
----------------------------------
--vendorid	cnt
--2	        3185
--1	        4217

--There are total 7402 records with negative trip_distance where vendor id 1 having more than vendor 2
------------------------------------



--Checking for unusual or erroneous ratecodeid 

SELECT  ratecodeid,vendorid,COUNT(*) AS CNT FROM nyc_taxi_data where ratecodeid not in (1,2,3,4,5,6) GROUP BY ratecodeid,vendorid;

--------------------------------------------
--ratecodeid	vendorid	cnt
--99	        1	        8
--99	        2	        1
--There are some invalid ratecode id avaliable as 99.Vendor 2 having 8 invalid ratecode and vendor 1 having 1 invalid ratecode
--------------------------------------------


--Checking for unusual or erroneous store_and_fwd_flag

SELECT DISTINCT store_and_fwd_flag FROM nyc_taxi_data-- No Error only Y and N available

--No error for store_and_fwd_flag


--Checking for unusual or erroneous payment_type
SELECT  payment_type,COUNT(*) AS CNT FROM nyc_taxi_data where payment_type not in (1,2,3,4,5,6) GROUP BY payment_type

--ALL records looks good no error found

--Checking for unusual or erroneous fare_amount 

SELECT vendorid,sum(fare_amount) negative_Fare_sum,COUNT(*) as cnt   FROM nyc_taxi_data where fare_amount<0 group by vendorid

------------------------------

--vendorid	negative_fare_sum	cnt
--2	        -4917.38	        558

-- Vendor 2 having negative fare_amount of 4917.38 for 558 records

------------------------------


--Checking for unusual or erroneous total_amount 

SELECT vendorid,sum(total_amount) negative_total_sum,COUNT(*) as cnt   FROM nyc_taxi_data where total_amount<0 group by vendorid

------------------------------

--vendorid	negative_total_sum	cnt
--2	        -5583.560000000059	558

-- Vendor 2 having negative total_amount of 5583.560000000059 for 558 records

------------------------------


--Checking for unusual or erroneous tolls_amount 

SELECT vendorid,sum(tolls_amount) negative_toll_sum,COUNT(*) as cnt   FROM nyc_taxi_data where tolls_amount<0 group by vendorid

------------------------------

--vendorid	negative_toll_sum	cnt
--2	        -17.28	            3

-- Vendor 2 having negative tolls_amount of 17.28 for 3 records

------------------------------


--Checking for unusual or erroneous extra 

SELECT vendorid,COUNT(*) AS CNT  FROM nyc_taxi_data WHERE  extra not in (0,0.5,1) Group by vendorid

---------------------------------
--vendorid	cnt
--2	        3033
--1	        1823

--Vendor 1 having 1823 and vendor 2 having 3033 different extra than (0,0.5,1)
---------------------------------



--Checking for unusual or erroneous mta_tax 

SELECT vendorid,COUNT(*) AS CNT  FROM nyc_taxi_data WHERE  mta_tax not in (0,0.5) Group by vendorid

---------------------------------

--vendorid	cnt
--2	        547
--1	        1

--Vendor 1 having 1 and vendor 2 having 547 different mta_tax than (0,0.5)
---------------------------------



--Checking for unusual or erroneous improvement_surcharge 

SELECT vendorid,COUNT(*) AS CNT  FROM nyc_taxi_data WHERE improvement_surcharge not in (0,0.3) Group by vendorid

---------------------------------

--vendorid	cnt
--2	        562

--vendor 2 having 562 different improvement_surcharge than  (0,0.3)
---------------------------------



--Checking for unusual or erroneous tip_amount 

SELECT vendorid,sum(tip_amount) negative_tip_sum,COUNT(*) as cnt   FROM nyc_taxi_data where tip_amount<0 group by vendorid

------------------------------

--vendorid	negative_tip_sum	cnt
--2	        -3.5	            4

-- Vendor 2 having negative tip_amount of 3.5 for 4 records

------------------------------



-------------------- Conclusion on unusual or erroneous rows in the dataset --------------------

-- There are unusual or erroneous rows in dataset for the below columns:
--passenger_count
--trip_distance
--ratecodeid
--fare_amount
--total_amount
--tolls_amount
--extra
--mta_tax
--improvement_surcharge
--tolls_amount
--tpep_dropoff_datetime
--tpep_pickup_datetime

-- 	Note: vendor id  1 having 13688 error record and vendor id 2 having 7276 error record based on all columns.

-----------------------------------------------------------------


-----------------------------------------------------------------------
--Before answering the below questions, you need to create a clean, ORC partitioned table for analysis. Remove all the erroneous rows.
-----------------------------------------------------------------------

SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

--Drop table if exists
Drop table Baj_Casestudy.partitioned_orc_nyc_taxi_data;


--Creating  clean, ORC partitioned table
CREATE EXTERNAL TABLE IF NOT EXISTS Baj_Casestudy.partitioned_orc_nyc_taxi_data(
vendorid int,
tpep_pickup_datetime timestamp,
tpep_dropoff_datetime timestamp,
passenger_count int,
trip_distance double,
ratecodeid int,
store_and_fwd_flag string,
pulocationid int,
dolocationid int,
payment_type int,
fare_amount double,
extra double,
mta_tax double,
tip_amount double,
tolls_amount double,
improvement_surcharge double,
total_amount double
  ) PARTITIONED BY (yr int, mnth int)
STORED AS ORC
LOCATION '/user/hive/warehouse/partitioned_orc_nyc_taxi_data'
TBLPROPERTIES ("orc.compress"="SNAPPY");

-- Verify newly created table  

Select * from partitioned_orc_nyc_taxi_data

-- Inserting data to the partitioned table after removing all error records
INSERT OVERWRITE TABLE partitioned_orc_nyc_taxi_data PARTITION(yr, mnth)
SELECT 
vendorid,
tpep_pickup_datetime,
tpep_dropoff_datetime,
passenger_count,
trip_distance,
ratecodeid,
store_and_fwd_flag,
pulocationid,
dolocationid,
payment_type,
fare_amount,
extra,
mta_tax,
tip_amount,
tolls_amount,
improvement_surcharge,
total_amount,
year(tpep_pickup_datetime) as yr,
month(tpep_pickup_datetime) as mnth
FROM nyc_taxi_data
WHERE date_format(tpep_pickup_datetime,'yyyyMM') in ('201711','201712')
AND tpep_pickup_datetime< tpep_dropoff_datetime
AND passenger_count NOT IN (0)
AND ratecodeid not IN (99)
AND trip_distance>0
AND fare_amount>0
AND extra in (0,0.5,1)
AND mta_tax in (0,0.5)
AND improvement_surcharge in (0,0.3)
AND tip_amount>=0
AND total_amount>0
AND tolls_amount>=0;

--Verifying data after insert
Select * from partitioned_orc_nyc_taxi_data LIMIT 5


-- Verifying the number of records drop for each vendor ID
SELECT 
vendorid,
Case 
when vendorid=1 then 'Creative Mobile Technologies, LLC' 
when vendorid=2 then 'VeriFone Inc.' else 'X' end as Vendor_Name,
COUNT(*) CNT FROM 
partitioned_orc_nyc_taxi_data GROUP BY vendorid

------------------------------------------------------------
--vendorid	vendor_name	                        cnt
--1	        Creative Mobile Technologies, LLC	513698
--2	        VeriFone Inc.	                    639907

--vendor id  1 having 13688 error record and vendor id 2 having 7276 error record based on all columns.
------------------------------------------------------------




--Analysis-I

-----------------------------------------------

-- Question 1 
--Compare the overall average fare per trip for November and December.
-----------------------------------------------

SELECT MNTH,ROUND(AVG(fare_amount),3) AVG_AMT FROM partitioned_orc_nyc_taxi_data GROUP BY MNTH


------------------------------------------------
--mnth	avg_amt
--11	12.906
--12	12.699

-- Average Amount is higher for month of November than December
------------------------------------------------


------------------------------------------------
--Question 2
--Explore the ‘number of passengers per trip’ - how many trips are made by each level of ‘Passenger_count’?
--Do most people travel solo or with other people?
------------------------------------------------

SELECT passenger_count,COUNT(*) AS CNT FROM partitioned_orc_nyc_taxi_data GROUP BY passenger_count

-----------------------------------------------
--passenger_count	cnt
--1	                817035
--2	                174785
--3	                50183
--4	                24680
--5	                54037
--6	                32882
--7	                3

--Yes most of the people tavel solo as passenger count of 1 is higher than others. 
-----------------------------------------------



----------------------------------------------
--Question 3
--Which is the most preferred mode of payment?

----------------------------------------------

SELECT 
CASE WHEN payment_type=1 then 'Credit card'
WHEN payment_type=2 then 'Cash'
WHEN payment_type=3 then 'No charge'
WHEN payment_type=4 then 'Dispute'
WHEN payment_type=5 then 'Unknown'
else 'Voided trip' end as payment_name,
 payment_type,COUNT(*) AS CNT 
FROM partitioned_orc_nyc_taxi_data GROUP BY 
CASE WHEN payment_type=1 then 'Credit card'
WHEN payment_type=2 then 'Cash'
WHEN payment_type=3 then 'No charge'
WHEN payment_type=4 then 'Dispute'
WHEN payment_type=5 then 'Unknown'
else 'Voided trip' end,payment_type

----------------------------------

--payment_name	payment_type	cnt
--Credit card	1	            779153
--Cash	        2	            368660
--No charge	    3	            4492
--Dispute	    4	            1300

--Credit card payment is preffered most

----------------------------------


---------------------------------------------
--Question 4
--What is the average tip paid per trip? 
--Compare the average tip with the 25th, 50th and 75th percentiles and comment whether the ‘average tip’ is a representative statistic (of the central tendency) of ‘tip amount paid’.
--Hint: You may use percentile_approx(DOUBLE col, p): Returns an approximate pth percentile of a numeric column (including floating point types) in the group.
---------------------------------------------


SELECT 
ROUND(AVG(tip_amount),2) AVG_TIP_AMOUNT,
ROUND(percentile_approx(tip_amount, 0.25),2) AS 25_PERCENTILE,
ROUND(percentile_approx(tip_amount, 0.50),2) AS 50_PERCENTILE,
ROUND(percentile_approx(tip_amount, 0.75),2) AS 75_PERCENTILE
FROM partitioned_orc_nyc_taxi_data

---------------------------------------------
--avg_tip_amount	25_percentile	50_percentile	75_percentile
--1.83	            0	            1.36	        2.45
---------------------------------------------

-- Average tip_amount paid       : 1.83
-- 50th percentile of tip amount : 1.36
-- The  average tip  is not a representative statistic (of the central tendency) of  tip amount paid
---------------------------------------------

--Question 5
--Explore the ‘Extra’ (charge) variable - what fraction of total trips have an extra charge is levied?

---------------------------------------------

SELECT 
Case when EXTRA>0 then 'Extra Charged' else 'No Extra Charge' END AS CHARGE,
COUNT(*) CNT,
round(COUNT(*)/sum(count(*)) over () * 100,2) PERCENTAGE
FROM partitioned_orc_nyc_taxi_data group by Case when EXTRA>0 then 'Extra Charged' else 'No Extra Charge' END  

--------------------------------------

--charge	        cnt	    percentage
--No Extra Charge	621270	53.85
--Extra Charged	    532335	46.15

-- Extra Charge levied trip percentage is 46.15

--------------------------------------


---Analysis-II



-------------------------------------------
--Question 1
--What is the correlation between the number of passengers on any given trip, and the tip paid per trip? 
--Do multiple travellers tip more compared to solo travellers? Hint: Use CORR(Col_1, Col_2)
---------------------------------------------

SELECT 
CORR(tip_amount, passenger_count)
FROM partitioned_orc_nyc_taxi_data 

--------------------------------------------

-- Co relation
-- -0.005287781421481756


--Correlation between the number of passengers and tip paid: -0.005287781421481756
--Based on correlation value, solo travellers pay more compared to multiple travellers.
---------------------------------------------


---------------------------------------------
--Question 2
--Segregate the data into five segments of ‘tip paid’: [0-5), [5-10), [10-15) , [15-20) and >=20. 
--Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket).
---------------------------------------------

SELECT 
CASE 
WHEN  tip_amount>= 0 and tip_amount<5 then '[0-5]'
WHEN  tip_amount>= 5 and tip_amount<10 then '[5-10]'
WHEN  tip_amount>= 10 and tip_amount<15 then '[10-15]'
WHEN  tip_amount>= 15 and tip_amount<20 then '[15-20]'
else '>=20' end  AS BUCKET,
COUNT(*) CNT,
Round(COUNT(*)/sum(count(*))over () *100,2) PERCENTAGE
FROM partitioned_orc_nyc_taxi_data GROUP by
CASE 
WHEN  tip_amount>= 0 and tip_amount<5 then '[0-5]'
WHEN  tip_amount>= 5 and tip_amount<10 then '[5-10]'
WHEN  tip_amount>= 10 and tip_amount<15 then '[10-15]'
WHEN  tip_amount>= 15 and tip_amount<20 then '[15-20]'
else '>=20' end


------------------------------------------------------------
--bucket	    cnt	        percentage
--[0-5]	        1065973	    92.4
--[5-10]	    65042	    5.64
--[10-15]	    19414	    1.68
--[15-20]	    2160	    0.19
-->=20	        1016	    0.09

-- Bucket [0-5]	 having high percentage
-------------------------------------------------------------



------------------------------------------------------------
--QUESTION 3
--Which month has a greater average ‘speed’ - November or December? Note that the variable ‘speed’ will have to be derived from other metrics. 
--Hint: You have columns for distance and time.
------------------------------------------------------------

select Round(AVG(trip_distance/((UNIX_TIMESTAMP(tpep_dropoff_datetime)-UNIX_TIMESTAMP(tpep_pickup_datetime))/3600)),2) AS AVG_SPEED,month(tpep_pickup_datetime) AS MNTH
from partitioned_orc_nyc_taxi_data group  by month(tpep_pickup_datetime)

------------------------------------------------------------
--Note Speed is in MPH
--avg_speed	mnth
--10.97	    11
--11.07	    12

--November Avg speed is 10.97
--December Avg speed is 11.07
--December having high average speed than november
-------------------------------------------------------------



--------------------------------------------------------------
--Question 4
--Analyse the average speed of the most happening days of the year, i.e. 31st December (New year’s eve) and 25th December (Christmas)
--and compare it with the overall average. 

--------------------------------------------------------------
--AVERAGE SPEED ON 25th and 31st December

select FROM_UNIXTIME(UNIX_TIMESTAMP(tpep_pickup_datetime), 'dd-MMM-yyyy') AS DAY,ROUND(AVG(trip_distance/((UNIX_TIMESTAMP(tpep_dropoff_datetime)-UNIX_TIMESTAMP(tpep_pickup_datetime))/3600)),2) AS AVG_SPEED
from partitioned_orc_nyc_taxi_data
where mnth=12
AND DAY(tpep_pickup_datetime) IN (25,31)
GROUP BY FROM_UNIXTIME(UNIX_TIMESTAMP(tpep_pickup_datetime), 'dd-MMM-yyyy')


--Overall Average speed

select ROUND(AVG(trip_distance/((UNIX_TIMESTAMP(tpep_dropoff_datetime)-UNIX_TIMESTAMP(tpep_pickup_datetime))/3600)),2) AS AVG_SPEED
from partitioned_orc_nyc_taxi_data
where 
date_format(tpep_pickup_datetime,'yyyyMM') in ('201711','201712')


---------------------------------------------------------------
--AVERAGE SPEED ON 25th and 31st December

--day	        avg_speed
--25-Dec-2017	15.27
--31-Dec-2017	13.24



--Overall average speed 

--avg_speed
--11.02

--25th Dec Average Speed(15.27 MPH)  is higher than 31st Dec Avegare Speed(13.24 MPH) 
--Overall average speed is 11.02 MPH
--25th and 31st dec average speed is higher than overall average speed specially on 25th dec it's much higher than overall.
---------------------------------------------------------------